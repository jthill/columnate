#!/bin/awk -f
# This is free and unencumbered software released into the public domain
# See file LICENSE or refer to <http://unlicense.org/>
#
# toy implementation for exploring minimum-width columnation algorithm.
#
# run with e.g. ls|sort|columnate rowmajor=1 COLUMNS=$COLUMNS

    { item[NR-1]=$0 }

END {
        maxcols = int((COLUMNS+2)/3)
        if (maxcols>NR) maxcols=NR

        for ( cols = 1 ; cols <= maxcols ; ++cols )
                nlines[cols] = int((NR+cols-1)/cols)

        for ( i=0 ; i<NR ; ++i ) {
                ilen = length(item[i])
                for ( cols=1 ; cols <= maxcols ; ++cols ) {
                        if (rowmajor) {
                                icol  = int(i%cols)
                                iline = int(i/cols)
                        } else {
                                lines=nlines[cols]
                                if ( i < filled ) {
                                        icol   = int(i/lines)
                                        iline  = int(i%lines)
                                } else {
					fullcols = int(NR/lines)
					filled   = fullcols*lines
                                        over     = i-filled
                                        short    = lines-1
                                        icol   = fullcols+int(over/short)
                                        iline  = int(over%short)
                                }
                        }
                        if ( ilen > colwidths[cols,icol] )
                                colwidths[cols,icol] = ilen;
                }
        }

        cols = 1
        lines= -1
        for ( nc = 1 ; nc <= maxcols ; ++nc ) {
                if (lines!=nlines[nc]) {
                        bestwidth=COLUMNS+1
                        lines=nlines[nc];
                }
                width=2*nc-1
                for (c = 0; c < nc; ++c)
                        width+=colwidths[nc,c]
                if ( width < bestwidth ) {
                        cols = nc
                        bestwidth = width
                }
        }

        lines=nlines[cols]
        fullcols=int(NR/lines)
        filled=fullcols*lines

        for ( line = 0 ; line < lines ; ++line ) {
                for ( col = 0 ; col < cols ; ++col ) {
                        innerfmt="%-"colwidths[cols,col]"s%s"

                        if (rowmajor)
                                i = line*cols+col
                        else if (col < fullcols)
                                i=col*lines+line
                        else
                                i=filled+(col-fullcols)*(lines-1)+line

                        if ( i >= NR )
                                break

                        if (rowmajor)
                                if (col+1<cols && i+1<NR)
                                        printf innerfmt, item[i], "  "
                                else
                                        printf "%s",item[i]
                        else
                        if (  line+1==lines && col<=fullcols \
                           || line+1 <lines && col+1<cols)
                                printf innerfmt, item[i], "  "
                        else
                                printf "%s",item[i]
                }
                print "";
        }
}
